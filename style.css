* {
  font-family: "Roboto",sans-serif;
  box-sizing: border-box;
}

.container {
  padding: 10px 0px;
}

.wolken-primary {
  color: #fff;
  background: #1A73E8;
}

.wolken-accent {
  color: #1A73E8;
  background: #fff;
}


/* Button classes */
.wolken-button {
  cursor: pointer;
  border-radius: 4px;
  font-family: 'Google Sans', Arial, sans-serif;
  font-size: 14px;
  font-weight: 600;
  letter-spacing: .6px;
  line-height: 24px;
  padding-bottom: 6px;
  padding-left: 24px;
  padding-right: 24px;
  padding-top: 6px;
  pointer-events: initial;
  text-transform: none;
  transform: scale(1, 1);
  transition: transform 300ms ease-in-out;
  box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 1px 5px 0 rgba(0,0,0,0.12), 0 3px 1px -2px rgba(0,0,0,0.2);
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
  border: none;
  outline: 0;
}

.wolken-button:hover {
  box-shadow: 0 7px 14px rgba(0, 0, 0, 0.18), 0 5px 5px rgba(0, 0, 0, 0.12)
}

.wolken-fab-button {
  cursor: pointer;
  box-shadow: 0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);
  border: none;
  outline: 0;
  white-space: nowrap;
  text-decoration: none;
  vertical-align: baseline;
  text-align: center;
  line-height: 24px;
  font-size: 14px;
  font-weight: 600;
  letter-spacing: .6px;
  border-radius: 50%;
  width: 48px;
  height: 48px;
}

/* Card classes */
.wolken-card {
  box-shadow: 0px 1px 2px 0px rgba(60,64,67,0.3), 0px 2px 6px 2px rgba(60,64,67,0.15);
  background: #fff;
  padding: 15px 20px;
  border-radius: 1px;
  font-size: 14px;
}

.wolken-card-header {
  margin-top: 10px;
  margin-bottom: 10px;
}

.wolken-card-content {
  margin-top: 10px;
  margin-bottom: 10px;
}


/* Form field Css */
.wolken-form-field {
  width: 400px;
  position: relative;
  margin: 10px 0px;
}

.wolken-form-field input, textarea{
  width: 400px;
  background: none;
  font-size: 18px;
  padding: 10px 10px 10px 5px;
  display: block;
  border: none;
  border-radius: 0;
  border-bottom: 1px solid #c6c6c6;
}

.wolken-form-field textarea {
  resize: none;
}

input[type="password"] {
  letter-spacing: 0.3em;
}

.wolken-form-field input:focus, textarea:focus{
  outline: none;
}

.wolken-form-field input:focus ~ .wolken-input-placeholder,
  .wolken-form-field input:valid ~ .wolken-input-placeholder {
  top: -14px;
  font-size: 12px;
  color: #1A73E8;
}

.wolken-form-field textarea:focus ~ .wolken-input-placeholder,
.wolken-form-field textarea:valid ~ .wolken-input-placeholder {
  top: -14px;
  font-size: 12px;
  color: #1A73E8;
}

.wolken-form-field input:focus ~ .wolken-input-bar:before,
.wolken-form-field textarea:focus ~ .wolken-input-bar:before {
  width: 400px;
}

.wolken-form-field .wolken-input-bar {
  position: relative;
  display: block;
  width: 400px;
}

.wolken-form-field .wolken-input-bar:before {
  content: '';
  height: 2px;
  width: 0;
  bottom: 0px;
  position: absolute;
  background: #1A73E8;
  transition: 300ms ease all;
  left: 0%;
}

.wolken-form-field .wolken-input-placeholder {
  color: rgba(0,0,0,0.5);
  font-size: 16px;
  font-weight: normal;
  position: absolute;
  pointer-events: none;
  left: 5px;
  top: 10px;
  transition: 300ms ease all;
}

.wolken-form-field .wolken-input-placeholder .required {
  color:red;
}

.wolken-form-field .wolken-input-error {
  /* display: none; */
  color:red;
  font-size: 10px;
  padding: 0px 5px;
}

.wolken-form-field .wolken-input-hint {
  /* display: none; */
  color:rgba(0,0,0,0.4);
  font-size: 10px;
  padding: 0px 5px;
}


/* Checkbox css */

.wolken-checkbox {
  z-index: 0;
  position: relative;
  display: inline-block;
  color: rgba(0,0,0,0.8);
  font-size: 16px;
  line-height: 1.5;
}

.wolken-checkbox > input {
  appearance: none;
  z-index: -1;
  position: absolute;
  left: -10px;
  top: -8px;
  display: block;
  margin: 0;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  background-color: #1A73E8;
  box-shadow: none;
  outline: none;
  opacity: 0;
  transform: scale(1);
  pointer-events: none;
  transition: opacity 0.3s, transform 0.2s;
}

.wolken-checkbox > span {
  display: inline-block;
  width: 100%;
  cursor: pointer;
}

.wolken-checkbox > span::before {
  content: "";
  display: inline-block;
  box-sizing: border-box;
  margin: 3px 11px 3px 1px;
  border: solid 2px; /* Safari */
  border-color: rgba(0,0,0,0.6);
  border-radius: 2px;
  width: 18px;
  height: 18px;
  vertical-align: top;
  transition: border-color 0.2s, background-color 0.2s;
}

.wolken-checkbox > span::after {
  content: "";
  display: block;
  position: absolute;
  top: 3px;
  left: 1px;
  width: 10px;
  height: 5px;
  border: solid 2px transparent;
  border-right: none;
  border-top: none;
  transform: translate(3px, 4px) rotate(-45deg);
}

.wolken-checkbox > input:checked,
.wolken-checkbox > input:indeterminate {
    background-color: #1A73E8;
}

.wolken-checkbox > input:checked + span::before,
.wolken-checkbox > input:indeterminate + span::before {
    border-color: #1A73E8;
    background-color: #1A73E8;
}

.wolken-checkbox > input:checked + span::after,
.wolken-checkbox > input:indeterminate + span::after {
    border-color: #ffffff;
}

.wolken-checkbox > input:indeterminate + span::after {
    border-left: none;
    transform: translate(4px, 3px);
}

.wolken-checkbox:hover > input {
    opacity: 0.04;
}

.wolken-checkbox > input:focus {
    opacity: 0.12;
}

.wolken-checkbox:hover > input:focus {
    opacity: 0.16;
}

/* Active */
.wolken-checkbox > input:active {
    opacity: 1;
    transform: scale(0);
    transition: transform 0s, opacity 0s;
}

.wolken-checkbox > input:active + span::before {
    border-color: #1A73E8;
}

.wolken-checkbox > input:checked:active + span::before {
    border-color: transparent;
    background-color: rgba(0, 0, 0, 0.6);
}

/* Disabled */
.wolken-checkbox > input:disabled {
    opacity: 0;
}

.wolken-checkbox > input:disabled + span {
    color: rgba(0, 0, 0, 0.38);
    cursor: initial;
}

.wolken-checkbox > input:disabled + span::before {
    border-color: currentColor;
}

.wolken-checkbox > input:checked:disabled + span::before,
.wolken-checkbox > input:indeterminate:disabled + span::before {
    border-color: transparent;
    background-color: currentColor;
}
